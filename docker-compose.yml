version: '3.2'

networks:
  web:
    external: true
  internal:
    external: false

services:

services:
  caddy:
    image: caddy:2.1.1-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
    volumes:
      - /home/docker/data/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /home/docker/data/caddy/site/officinecartografiche:/srv
      - /home/docker/data/caddy/caddy_data:/data
      - /home/docker/data/caddy/config:/config
    networks:
      - web

volumes:
  caddy_data:
  caddy_config:


  lizmap:
    image: jancelin/docker-lizmap:3.2
    restart: on-failure
    volumes:
     - ${PWD}/docker/lizmap/project:/home
     - ${PWD}/docker/lizmap/var:/var/www/websig/lizmap/var
    depends_on:
      - postgis
      - qgiserver
      - redis
    links:
     - qgiserver:qgiserver
     - redis:redis
    networks:
      - internal
      - web
  qgiserver:
    image: kartoza/qgis-server:3.0.3
    hostname: qgiserver
    environment:
      PGSERVICEFILE: /srv/etc/pg_service.conf
      QGSRV_CACHE_ROOTDIR: /srv/projects
      QGSRV_CACHE_SIZE: '20'
      QGSRV_LOGGING_LEVEL: DEBUG
      QGSRV_USER: 1000:1000
      ROUTER_HOST: map
      QGIS_PROJECT_FILE: /project/project.qgs
      QGIS_SERVER_LOG_LEVEL: 0
    volumes:
      - ${PWD}/docker/qgiserver/qgis:/srv/projects
      - ${PWD}/docker/qgiserver/etc:/srv/etc:ro
      - ${PWD}/docker/qgiserver/wps-data:/srv/data
    restart: unless-stopped
    labels:
     traefik.backend: "qgiserver"
     traefik.enable: "true"
     traefik.backend: "qgiserver"
     traefik.frontend.rule: "Host: qgiserver.officinecartografiche.net"
     traefik.docker.network: "web"
    networks:
      - internal
      - web
  redis:
    image: redis:5
    volumes:
      - ${PWD}/docker/redis:/data
    restart: unless-stopped
    networks:
      - internal
      - web
  cloud:
    image: nextcloud:latest
    restart: always
    environment:
      POSTGRES_HOST: postgis
      POSTGRES_PASSWORD: 'secretpassword'
      POSTGRES_DB: 'nextcloud'
      POSTGRES_USER: 'postgres'
      NEXTCLOUD_ADMIN_USER: admin
      NEXTCLOUD_ADMIN_PASSWORD: secretpassword
    depends_on:
      - postgis
    volumes:
      - ${PWD}/docker/nextcloud:/var/www/html
      - ${PWD}/docker/lizmap/project:/data:rw
    networks:
      - internal
      - web
  postgis:
    image: mdillon/postgis
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      ALLOW_IP_RANGE: 0.0.0.0/0
      POSTGRES_USER: postgres
      POSTGRES_DBNAME: gis
      POSTGRES_PASSWORD: secretpassword
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${PWD}/docker/postgis/postgresql:/var/lib/postgresql
      - ${PWD}/docker/postgis/home/:/home
      - ${PWD}/docker/postgis/pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - internal
      - web
